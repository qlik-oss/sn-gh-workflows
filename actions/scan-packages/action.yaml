name: "Scan package.json"
description: "Scans the package.json files in the repo"
author: "johan.enell@qlik.com"

outputs:
  scripts:
    description: "The scripts available in the root package.json"
    value: ${{ steps.package.outputs.scripts }}
  strategy:
    description: "Strategy for running actions"
    value: ${{ steps.strategy.outputs.strategy }}

runs:
  using: composite

  steps:
    - name: Setup pnpm
      uses: pnpm/action-setup@v3

    - name: Read package.json
      shell: bash
      id: package
      run: |
        scripts=$(cat package.json| jq -rc '.scripts | keys')
        if [ "$scripts" != "null"  ]; then
          echo "scripts=$scripts" >> "$GITHUB_OUTPUT"
        else
          echo "::error::Couldn't find a script section in package.json"
        fi
    - name: Verify stardust
      shell: bash
      run: pnpm -r --workspace-concurrency=1 exec ${{ github.action_path }}/checkPeerDeps.sh
    - name: Get repo matrix
      shell: bash
      id: strategy
      run: |
        repos=$(pnpm -r exec pwd)
        matrixEntries=""

        for item in $repos; do
          cd $item
          name=$(cat package.json | jq -r '.name')
          systemjs=$(cat package.json | jq -r '.systemjs')
          JSON_STRING=$(
            jq -n \
              --arg package $name \
              --arg folder $item \
              --arg systemjs ${systemjs#dist/} \
              '$ARGS.named'
          )
          matrixEntries+="$JSON_STRING,"
        done

        strategy="{ \"fail-fast\": false, \"matrix\": {\"include\": [${matrixEntries%?}] }}"
        echo "strategy=$strategy" >> "$GITHUB_OUTPUT"
