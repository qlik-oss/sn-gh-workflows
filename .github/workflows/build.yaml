name: Build & Release

on:
  workflow_call:
    inputs:
      release:
        required: true
        type: boolean
      release_branches:
        required: false
        type: string

jobs:
  build_release:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      contents: write

    steps:
      - name: Setup workspace
        uses: qlik-oss/sn-gh-workflows/actions/setup@v1
        with:
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Read package.json
        uses: actions/github-script@v6
        id: package
        with:
          script: |
            try {
              const fs = require('fs')
              const jsonString = fs.readFileSync('./package.json')
              var package = JSON.parse(jsonString)
              return Object.keys(package.scripts)
            } catch(err) {
              core.error("Error while reading or parsing the JSON")
              core.setFailed(err)
            }

      - name: ESLint
        if: contains(fromJSON(steps.package.outputs.result), 'lint')
        run: yarn lint

      - name: Prettier
        if: contains(fromJSON(steps.package.outputs.result), 'format:check')
        run: yarn format:check

      - name: Typescript
        if: contains(fromJSON(steps.package.outputs.result), 'types:check')
        run: yarn types:check

      - name: Run unit tests
        uses: paambaati/codeclimate-action@v4.0.0
        if: contains(fromJSON(steps.package.outputs.result), 'test:unit')
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: ${{github.workspace}}/coverage/lcov.info:lcov
          coverageCommand: yarn test:unit --ci --coverage --reporters="github-actions" --reporters="summary"

      - name: Build
        if: contains(fromJSON(steps.package.outputs.result), 'build' )
        run: yarn build

      - name: Build ext
        if: contains(fromJSON(steps.package.outputs.result), 'sense')
        run: yarn sense

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          dry_run: ${{ !inputs.release }}
          branches: ${{ inputs.release_branches }}

      - name: Upload extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-ext
          path: "*-ext/**/*"
          retention-days: 7
